plugins {
    id 'java-library'
    id 'org.springframework.boot.optional-dependencies'
	id 'maven-publish'
	id 'org.springframework.boot.conventions'
}

description = 'Spring Boot AutoConfigure'

dependencies {
	annotationProcessor enforcedPlatform(project(':spring-boot-project:spring-boot-parent'))
	annotationProcessor project(':spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor')
	annotationProcessor project(':spring-boot-project:spring-boot-tools:spring-boot-configuration-processor')

	implementation enforcedPlatform(project(':spring-boot-project:spring-boot-parent'))
	implementation project(':spring-boot-project:spring-boot')

	optional enforcedPlatform(project(':spring-boot-project:spring-boot-parent'))
	optional 'com.atomikos:transactions-jdbc'
	optional 'com.atomikos:transactions-jta'
	optional 'com.couchbase.client:couchbase-spring-cache'
	optional 'com.fasterxml.jackson.core:jackson-databind'
	optional 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	optional 'com.fasterxml.jackson.module:jackson-module-parameter-names'
	optional 'com.google.code.gson:gson'
	optional 'com.hazelcast:hazelcast'
	optional 'com.hazelcast:hazelcast-client'
	optional 'com.hazelcast:hazelcast-spring'
	optional 'com.h2database:h2'
	optional 'com.samskivert:jmustache'
	optional 'com.sun.mail:javax.mail'
	optional 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	optional 'io.lettuce:lettuce-core'
	optional 'io.projectreactor.netty:reactor-netty'
	optional 'javax.cache:cache-api'
	optional 'javax.json.bind:javax.json.bind-api'
	optional 'javax.money:money-api'
	optional 'io.searchbox:jest'
	optional 'org.apache.kafka:kafka-streams'
	optional 'org.flywaydb:flyway-core'
	optional 'org.glassfish.jersey.core:jersey-server'
	optional 'org.glassfish.jersey.containers:jersey-container-servlet-core'
	optional 'org.glassfish.jersey.containers:jersey-container-servlet'
	optional 'org.glassfish.jersey.ext:jersey-spring4'
	optional 'org.glassfish.jersey.media:jersey-media-json-jackson'
	optional 'org.apache.activemq:activemq-broker'
	optional 'org.apache.activemq:artemis-jms-client'
	optional 'org.apache.activemq:artemis-jms-server'
	optional 'org.apache.commons:commons-dbcp2'
	optional 'org.apache.solr:solr-solrj'
	optional 'org.apache.tomcat.embed:tomcat-embed-core'
	optional 'org.apache.tomcat.embed:tomcat-embed-el'
	optional 'org.apache.tomcat.embed:tomcat-embed-websocket'
	optional 'org.apache.tomcat:tomcat-jdbc'
	optional 'org.codehaus.btm:btm'
	optional 'org.codehaus.groovy:groovy-templates'
	optional 'com.sendgrid:sendgrid-java'
	optional 'com.unboundid:unboundid-ldapsdk'
	optional 'com.zaxxer:HikariCP'
	optional 'org.eclipse.jetty:jetty-webapp'
	optional 'org.eclipse.jetty:jetty-reactive-httpclient'
	optional 'org.eclipse.jetty.websocket:javax-websocket-server-impl'
	optional 'io.undertow:undertow-servlet'
	optional 'io.undertow:undertow-websockets-jsr'
	optional 'org.ehcache:ehcache'
	optional 'org.elasticsearch.client:elasticsearch-rest-client'
	optional 'org.elasticsearch.client:elasticsearch-rest-high-level-client'
	optional 'org.freemarker:freemarker'
	optional 'org.hibernate:hibernate-core'
	optional 'org.hibernate:hibernate-jcache'
	optional 'org.hibernate.validator:hibernate-validator'
	optional 'org.infinispan:infinispan-jcache'
	optional 'org.infinispan:infinispan-spring4-embedded'
	optional 'org.jboss:jboss-transaction-spi'
	optional 'org.messaginghub:pooled-jms'
	optional 'org.mongodb:mongodb-driver-async'
	optional 'org.mongodb:mongodb-driver-reactivestreams'
	optional 'org.springframework:spring-jdbc'
	optional 'org.springframework.integration:spring-integration-core'
	optional 'org.springframework.integration:spring-integration-jdbc'
	optional 'org.springframework.integration:spring-integration-jmx'
	optional 'org.springframework:spring-jms'
	optional 'org.springframework:spring-orm'
	optional 'org.springframework:spring-tx'
	optional 'org.springframework:spring-web'
	optional 'org.springframework:spring-websocket'
	optional 'org.springframework:spring-webflux'
	optional 'org.springframework:spring-webmvc'
	optional 'org.springframework.batch:spring-batch-core'
	optional 'org.springframework.data:spring-data-couchbase'
	optional 'org.springframework.data:spring-data-jpa'
	optional 'org.springframework.data:spring-data-rest-webmvc'
	optional 'org.springframework.data:spring-data-cassandra'
	optional 'org.springframework.data:spring-data-jdbc'
	optional 'org.springframework.data:spring-data-ldap'
	optional 'org.springframework.data:spring-data-mongodb'
	optional 'org.springframework.data:spring-data-neo4j'
	optional 'org.springframework.data:spring-data-redis'
	optional 'org.springframework.data:spring-data-elasticsearch'
	optional 'org.springframework.data:spring-data-solr'
	optional 'org.springframework.hateoas:spring-hateoas'
	optional 'redis.clients:jedis'
	optional 'org.liquibase:liquibase-core'
	optional 'org.springframework.security:spring-security-acl'
	optional 'org.springframework.security:spring-security-config'
	optional 'org.springframework.security:spring-security-data'
	optional 'org.springframework.security:spring-security-oauth2-client'
	optional 'org.springframework.security:spring-security-oauth2-jose'
	optional 'org.springframework.security:spring-security-oauth2-resource-server'
	optional 'org.springframework.security:spring-security-web'
	optional 'org.springframework.session:spring-session-core'
	optional 'org.springframework.session:spring-session-data-mongodb'
	optional 'org.springframework.session:spring-session-data-redis'
	optional 'org.springframework.session:spring-session-hazelcast'
	optional 'org.springframework.session:spring-session-jdbc'
	optional 'org.springframework.amqp:spring-rabbit'
	optional 'org.springframework.kafka:spring-kafka'
	optional 'org.springframework.cloud:spring-cloud-spring-service-connector'
	optional 'org.springframework.ws:spring-ws-core'
	optional 'org.thymeleaf:thymeleaf'
	optional 'org.thymeleaf:thymeleaf-spring5'
	optional 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	optional 'com.github.ben-manes.caffeine:caffeine'
	optional 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute'
	optional 'org.thymeleaf.extras:thymeleaf-extras-java8time'
	optional 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	optional 'javax.jms:javax.jms-api'
	optional 'javax.mail:javax.mail-api'
	optional 'net.sf.ehcache:ehcache'
	optional 'org.aspectj:aspectjweaver'
	optional 'org.influxdb:influxdb-java'
	optional 'org.jooq:jooq'
	optional 'org.quartz-scheduler:quartz'

	testImplementation project(':spring-boot-project:spring-boot-tools:spring-boot-test-support')
	testImplementation project(':spring-boot-project:spring-boot-test')
	testImplementation 'ch.qos.logback:logback-classic'
	testImplementation 'commons-fileupload:commons-fileupload'
	testImplementation 'com.atomikos:transactions-jms'
	testImplementation 'com.jayway.jsonpath:json-path'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'com.sun.xml.messaging.saaj:saaj-impl'
	testImplementation 'javax.json:javax.json-api'
	testImplementation 'javax.xml.ws:jaxws-api'
	testImplementation 'mysql:mysql-connector-java'
	testImplementation 'org.apache.johnzon:johnzon-jsonb'
	testImplementation 'org.apache.logging.log4j:log4j-to-slf4j'
	testImplementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	testImplementation 'org.assertj:assertj-core'
	testImplementation 'org.hamcrest:hamcrest-library'
	testImplementation 'org.hsqldb:hsqldb'
	testImplementation 'org.neo4j:neo4j-ogm-http-driver'
	testImplementation 'org.neo4j:neo4j-ogm-embedded-driver'
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.yaml:snakeyaml'
}

compileJava {
	options.compilerArgs << "-Aorg.springframework.boot.configurationprocessor.additionalMetadataLocations=${sourceSets.main.resources.srcDirs}"
}
